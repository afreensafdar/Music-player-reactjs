{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safdaaf\\\\Desktop\\\\Bootcamp(Multiverse)\\\\Music-player-reactjs\\\\src\\\\components\\\\fragment\\\\ControlsToggleButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../assets/scss/ControlsToggleButton.scss';\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ControlsToggleButton(props) {\n  _s();\n\n  let ButtonOne = props.defaultIcon;\n  let ButtonTwo = props.changeIcon;\n  const [buttonType, setButton] = useState(false);\n\n  function handleChange() {\n    if (props.type === \"prev\" || props.type === \"next\") {\n      setButton(true);\n      props.onClicked(props.type, true);\n    } else {\n      setButton(!buttonType);\n      props.onClicked(props.type, !buttonType);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: props.style,\n    onClick: handleChange,\n    className: props.type,\n    children: !buttonType ? ButtonOne : ButtonTwo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ControlsToggleButton, \"5yUW0WpL6GI63Rm9C+IbdbFZeg4=\");\n\n_c = ControlsToggleButton;\nexport default ControlsToggleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlsToggleButton\");","map":{"version":3,"names":["React","useState","Button","ControlsToggleButton","props","ButtonOne","defaultIcon","ButtonTwo","changeIcon","buttonType","setButton","handleChange","type","onClicked","style"],"sources":["C:/Users/safdaaf/Desktop/Bootcamp(Multiverse)/Music-player-reactjs/src/components/fragment/ControlsToggleButton.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport '../assets/scss/ControlsToggleButton.scss';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction ControlsToggleButton(props) {\r\n    let ButtonOne = props.defaultIcon;\r\n    let ButtonTwo = props.changeIcon;\r\n    const [buttonType, setButton] = useState(false);\r\n\r\n    function handleChange() {\r\n        if (props.type === \"prev\" || props.type === \"next\") {\r\n            setButton(true);\r\n            props.onClicked(props.type, true);\r\n        }else{\r\n            setButton(!buttonType);\r\n            props.onClicked(props.type, !buttonType);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            style={props.style}\r\n            onClick={handleChange}\r\n            className={props.type}>\r\n            {\r\n                !buttonType ?\r\n                    ButtonOne :\r\n                    ButtonTwo\r\n            }\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default ControlsToggleButton;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,0CAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;EAAA;;EACjC,IAAIC,SAAS,GAAGD,KAAK,CAACE,WAAtB;EACA,IAAIC,SAAS,GAAGH,KAAK,CAACI,UAAtB;EACA,MAAM,CAACC,UAAD,EAAaC,SAAb,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;EAEA,SAASU,YAAT,GAAwB;IACpB,IAAIP,KAAK,CAACQ,IAAN,KAAe,MAAf,IAAyBR,KAAK,CAACQ,IAAN,KAAe,MAA5C,EAAoD;MAChDF,SAAS,CAAC,IAAD,CAAT;MACAN,KAAK,CAACS,SAAN,CAAgBT,KAAK,CAACQ,IAAtB,EAA4B,IAA5B;IACH,CAHD,MAGK;MACDF,SAAS,CAAC,CAACD,UAAF,CAAT;MACAL,KAAK,CAACS,SAAN,CAAgBT,KAAK,CAACQ,IAAtB,EAA4B,CAACH,UAA7B;IACH;EACJ;;EAED,oBACI,QAAC,MAAD;IACI,KAAK,EAAEL,KAAK,CAACU,KADjB;IAEI,OAAO,EAAEH,YAFb;IAGI,SAAS,EAAEP,KAAK,CAACQ,IAHrB;IAAA,UAKQ,CAACH,UAAD,GACIJ,SADJ,GAEIE;EAPZ;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH;;GA3BQJ,oB;;KAAAA,oB;AA6BT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}