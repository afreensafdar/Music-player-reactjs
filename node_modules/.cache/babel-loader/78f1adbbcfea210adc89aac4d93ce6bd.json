{"ast":null,"code":"const prefixes = ['webkit'];\n\nclass Grade {\n  constructor(container, img_selector, callback) {\n    this.callback = callback || null;\n    this.container = container;\n    this.image = this.container.querySelector(img_selector) || this.container.querySelector('img');\n    this.gradientData = [];\n\n    if (!this.image || !this.container) {\n      return;\n    }\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.imageDimensions = {\n      width: 0,\n      height: 0\n    };\n    this.imageData = [];\n    this.readImage();\n  }\n\n  readImage() {\n    this.imageDimensions.width = this.image.width * 0.1;\n    this.imageDimensions.height = this.image.height * 0.1;\n    this.render();\n  }\n\n  getImageData() {\n    let imageData = this.ctx.getImageData(0, 0, this.imageDimensions.width, this.imageDimensions.height).data;\n    this.imageData = Array.from(imageData);\n  }\n\n  getChunkedImageData() {\n    const perChunk = 4;\n    let chunked = this.imageData.reduce((ar, it, i) => {\n      const ix = Math.floor(i / perChunk);\n\n      if (!ar[ix]) {\n        ar[ix] = [];\n      }\n\n      ar[ix].push(it);\n      return ar;\n    }, []);\n    let filtered = chunked.filter(rgba => {\n      return rgba.slice(0, 2).every(val => val < 250) && rgba.slice(0, 2).every(val => val > 0);\n    });\n    return filtered;\n  }\n\n  getRGBAGradientValues(top) {\n    return top.map((color, index) => {\n      return `rgb(${color.rgba.slice(0, 3).join(',')}) ${index == 0 ? '0%' : '75%'}`;\n    }).join(',');\n  }\n\n  getCSSGradientProperty(top) {\n    const val = this.getRGBAGradientValues(top);\n    return prefixes.map(prefix => {\n      return `background-image: -${prefix}-linear-gradient(\n                        135deg,\n                        ${val}\n                    )`;\n    }).concat([`background-image: linear-gradient(\n                    135deg,\n                    ${val}\n                )`]).join(';');\n  }\n\n  getMiddleRGB(start, end) {\n    let w = 0.5 * 2 - 1;\n    let w1 = (w + 1) / 2.0;\n    let w2 = 1 - w1;\n    let rgb = [parseInt(start[0] * w1 + end[0] * w2), parseInt(start[1] * w1 + end[1] * w2), parseInt(start[2] * w1 + end[2] * w2)];\n    return rgb;\n  }\n\n  getSortedValues(uniq) {\n    const occurs = Object.keys(uniq).map(key => {\n      const rgbaKey = key;\n      let components = key.split('|'),\n          brightness = (components[0] * 299 + components[1] * 587 + components[2] * 114) / 1000;\n      return {\n        rgba: rgbaKey.split('|'),\n        occurs: uniq[key],\n        brightness\n      };\n    }).sort((a, b) => a.occurs - b.occurs).reverse().slice(0, 10);\n    return occurs.sort((a, b) => a.brightness - b.brightness).reverse();\n  }\n\n  getTextProperty(top) {\n    let rgb = this.getMiddleRGB(top[0].rgba.slice(0, 3), top[1].rgba.slice(0, 3));\n    let o = Math.round((parseInt(rgb[0]) * 299 + parseInt(rgb[1]) * 587 + parseInt(rgb[2]) * 114) / 1000);\n\n    if (o > 125) {\n      return 'color: #000';\n    } else {\n      return 'color: #fff';\n    }\n  }\n\n  getTopValues(uniq) {\n    let sorted = this.getSortedValues(uniq);\n    return [sorted[0], sorted[sorted.length - 1]];\n  }\n\n  getUniqValues(chunked) {\n    return chunked.reduce((accum, current) => {\n      let key = current.join('|');\n\n      if (!accum[key]) {\n        accum[key] = 1;\n        return accum;\n      }\n\n      accum[key] = ++accum[key];\n      return accum;\n    }, {});\n  }\n\n  renderGradient() {\n    const ls = window.localStorage;\n    const item_name = `grade-${this.image.getAttribute('src')}`;\n    let top = null;\n\n    if (ls && ls.getItem(item_name)) {\n      top = JSON.parse(ls.getItem(item_name));\n    } else {\n      let chunked = this.getChunkedImageData();\n      top = this.getTopValues(this.getUniqValues(chunked));\n\n      if (ls) {\n        ls.setItem(item_name, JSON.stringify(top));\n      }\n    }\n\n    if (this.callback) {\n      this.gradientData = top;\n      return;\n    }\n\n    let gradientProperty = this.getCSSGradientProperty(top);\n    let textProperty = this.getTextProperty(top);\n    let style = `${this.container.getAttribute('style') || ''}; ${gradientProperty}; ${textProperty}`;\n    this.container.setAttribute('style', style);\n  }\n\n  render() {\n    this.canvas.width = this.imageDimensions.width;\n    this.canvas.height = this.imageDimensions.height;\n    this.ctx.drawImage(this.image, 0, 0, this.imageDimensions.width, this.imageDimensions.height);\n    this.getImageData();\n    this.renderGradient();\n  }\n\n}\n\nmodule.exports = (containers, img_selector, callback) => {\n  const init = (container, img_selector, callback) => {\n    let grade = new Grade(container, img_selector, callback),\n        gradientData = grade.gradientData;\n\n    if (!gradientData.length) {\n      return null;\n    }\n\n    return {\n      element: container,\n      gradientData\n    };\n  };\n\n  let results = (NodeList.prototype.isPrototypeOf(containers) ? Array.from(containers).map(container => init(container, img_selector, callback)) : [init(containers, img_selector, callback)]).filter(Boolean);\n\n  if (results.length) {\n    return callback(results);\n  }\n};","map":{"version":3,"names":["prefixes","Grade","constructor","container","img_selector","callback","image","querySelector","gradientData","canvas","document","createElement","ctx","getContext","imageDimensions","width","height","imageData","readImage","render","getImageData","data","Array","from","getChunkedImageData","perChunk","chunked","reduce","ar","it","i","ix","Math","floor","push","filtered","filter","rgba","slice","every","val","getRGBAGradientValues","top","map","color","index","join","getCSSGradientProperty","prefix","concat","getMiddleRGB","start","end","w","w1","w2","rgb","parseInt","getSortedValues","uniq","occurs","Object","keys","key","rgbaKey","components","split","brightness","sort","a","b","reverse","getTextProperty","o","round","getTopValues","sorted","length","getUniqValues","accum","current","renderGradient","ls","window","localStorage","item_name","getAttribute","getItem","JSON","parse","setItem","stringify","gradientProperty","textProperty","style","setAttribute","drawImage","module","exports","containers","init","grade","element","results","NodeList","prototype","isPrototypeOf","Boolean"],"sources":["C:/Users/safdaaf/Desktop/Bootcamp(Multiverse)/Music-player-reactjs/node_modules/grade-js/src/index.js"],"sourcesContent":["const prefixes = ['webkit'];\n\nclass Grade {\n    constructor(container, img_selector, callback) {\n        this.callback = callback || null\n        this.container = container;\n        this.image = this.container.querySelector(img_selector) || this.container.querySelector('img')\n        this.gradientData = []\n        if(!this.image || !this.container){\n            return\n        }\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.imageDimensions = {\n            width: 0,\n            height: 0\n        };\n        this.imageData = [];\n        this.readImage()\n    }\n\n    readImage() {\n        this.imageDimensions.width = this.image.width * 0.1;\n        this.imageDimensions.height = this.image.height * 0.1;\n        this.render()\n    }\n\n    getImageData() {\n        let imageData = this.ctx.getImageData(\n            0, 0, this.imageDimensions.width, this.imageDimensions.height\n        ).data;\n        this.imageData = Array.from(imageData)\n    }\n\n    getChunkedImageData() {\n        const perChunk = 4;\n\n        let chunked = this.imageData.reduce((ar, it, i) => {\n            const ix = Math.floor(i / perChunk)\n            if (!ar[ix]) {\n                ar[ix] = []\n            }\n            ar[ix].push(it);\n            return ar\n        }, []);\n\n        let filtered = chunked.filter(rgba => {\n            return rgba.slice(0, 2).every(val => val < 250) && rgba.slice(0, 2).every(val => val > 0)\n        });\n\n        return filtered\n    }\n\n    getRGBAGradientValues(top) {\n        return top.map((color, index) => {\n            return `rgb(${color.rgba.slice(0, 3).join(',')}) ${index == 0 ? '0%' : '75%'}`\n        }).join(',')\n    }\n\n    getCSSGradientProperty(top) {\n        const val = this.getRGBAGradientValues(top);\n        return prefixes.map(prefix => {\n            return `background-image: -${prefix}-linear-gradient(\n                        135deg,\n                        ${val}\n                    )`\n        }).concat([`background-image: linear-gradient(\n                    135deg,\n                    ${val}\n                )`]).join(';')\n    }\n\n    getMiddleRGB(start, end) {\n        let w = 0.5 * 2 - 1;\n        let w1 = (w + 1) / 2.0;\n        let w2 = 1 - w1;\n        let rgb = [parseInt(start[0] * w1 + end[0] * w2), parseInt(start[1] * w1 + end[1] * w2), parseInt(start[2] * w1 + end[2] * w2)];\n        return rgb;\n    }\n\n    getSortedValues(uniq) {\n        const occurs = Object.keys(uniq).map(key => {\n                const rgbaKey = key;\n                let components = key.split('|'),\n                    brightness = ((components[0] * 299) + (components[1] * 587) + (components[2] * 114)) / 1000\n                return {\n                    rgba: rgbaKey.split('|'),\n                    occurs: uniq[key],\n                    brightness\n                }\n            }).sort((a, b) => a.occurs - b.occurs).reverse().slice(0, 10);\n        return occurs.sort((a, b) => a.brightness - b.brightness).reverse()\n    }\n\n    getTextProperty(top) {\n        let rgb = this.getMiddleRGB(top[0].rgba.slice(0,3), top[1].rgba.slice(0,3));\n        let o = Math.round(((parseInt(rgb[0]) * 299) + (parseInt(rgb[1]) * 587) + (parseInt(rgb[2]) * 114)) /1000);\n        if (o > 125) {\n            return 'color: #000';\n        } else { \n            return 'color: #fff';\n        }\n    }\n\n    getTopValues(uniq) {\n        let sorted = this.getSortedValues(uniq);\n        return [sorted[0], sorted[sorted.length - 1]]\n    }\n\n    getUniqValues(chunked) {\n        return chunked.reduce((accum, current) => {\n            let key = current.join('|');\n            if (!accum[key]) {\n                accum[key] = 1;\n                return accum\n            }\n            accum[key] = ++(accum[key]);\n            return accum\n        }, {})\n    }\n\n    renderGradient() {\n        const ls = window.localStorage;\n        const item_name = `grade-${this.image.getAttribute('src')}`;\n        let top = null;\n\n        if (ls && ls.getItem(item_name)) {\n            top = JSON.parse(ls.getItem(item_name));\n        } else {\n            let chunked = this.getChunkedImageData();\n            top = this.getTopValues(this.getUniqValues(chunked));\n\n            if (ls) {\n                ls.setItem(item_name, JSON.stringify(top));\n            }\n        }\n\n        if(this.callback){\n            this.gradientData = top\n            return\n        }\n\n        let gradientProperty = this.getCSSGradientProperty(top);\n\n        let textProperty = this.getTextProperty(top);\n\n        let style = `${this.container.getAttribute('style') || ''}; ${gradientProperty}; ${textProperty}`;\n        this.container.setAttribute('style', style)\n    }\n\n    render() {\n        this.canvas.width = this.imageDimensions.width;\n        this.canvas.height = this.imageDimensions.height;\n        this.ctx.drawImage(this.image, 0, 0, this.imageDimensions.width, this.imageDimensions.height);\n        this.getImageData();\n        this.renderGradient();\n    }\n}\n\nmodule.exports = (containers, img_selector, callback) => {\n    const init = (container, img_selector, callback) => {\n        let grade = new Grade(container, img_selector, callback),\n            gradientData = grade.gradientData\n        if(!gradientData.length){\n            return null\n        }\n        return {\n            element: container,\n            gradientData\n        }\n    }\n    let results = (NodeList.prototype.isPrototypeOf(containers)\n    ? Array.from(containers).map(container => init(container, img_selector, callback))\n    : [init(containers, img_selector, callback)]).filter(Boolean)\n\n    if(results.length){\n        return callback(results)\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}