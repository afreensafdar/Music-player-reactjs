{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safdaaf\\\\Desktop\\\\Bootcamp(Multiverse)\\\\Music-player-reactjs\\\\src\\\\components\\\\fragment\\\\DropDownLanguageList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport '../assets/scss/DropDown.scss';\nimport Button from \"@material-ui/core/Button\";\nimport LangList from \"./LangList\";\nimport { ThemeContext } from \"../../api/Theme\";\nimport { useDispatch } from \"react-redux\";\nimport { setMusicLang } from \"../../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDownLanguageList = () => {\n  _s();\n\n  const useStyle = useContext(ThemeContext);\n  const listOfLanguage = [\"Any\", \"Hindi\", \"English\"];\n  const [selectedList, setSelectedList] = useState({\n    \"Any\": false,\n    \"Hindi\": false,\n    \"English\": false\n  });\n\n  const handleSelected = (val, selected) => {\n    setSelectedList(prevState => {\n      return { ...prevState,\n        [val]: selected\n      };\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const handleLangSelect = e => {\n    e.preventDefault();\n    let list = [];\n\n    for (let i in selectedList) {\n      if (selectedList[i] === true) list.push(i.toLowerCase());\n    }\n\n    dispatch(setMusicLang(list));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: useStyle.component,\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-head\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pick the language you want to listen to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lang-list\",\n      children: listOfLanguage.map(item => {\n        return /*#__PURE__*/_jsxDEV(LangList, {\n          onClick: handleSelected,\n          item: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-div\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLangSelect,\n        style: useStyle.button.contained,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DropDownLanguageList, \"J87dPEgKWlJFFkWjSGBh9HAgfv8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DropDownLanguageList;\nexport default DropDownLanguageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDownLanguageList\");","map":{"version":3,"names":["React","useContext","useState","Button","LangList","ThemeContext","useDispatch","setMusicLang","DropDownLanguageList","useStyle","listOfLanguage","selectedList","setSelectedList","handleSelected","val","selected","prevState","dispatch","handleLangSelect","e","preventDefault","list","i","push","toLowerCase","component","map","item","button","contained"],"sources":["C:/Users/safdaaf/Desktop/Bootcamp(Multiverse)/Music-player-reactjs/src/components/fragment/DropDownLanguageList.jsx"],"sourcesContent":["import React, {useContext, useState} from \"react\";\r\nimport '../assets/scss/DropDown.scss';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LangList from \"./LangList\";\r\nimport {ThemeContext} from \"../../api/Theme\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setMusicLang} from \"../../actions/actions\";\r\n\r\nconst DropDownLanguageList = () => {\r\n\r\n    const useStyle = useContext(ThemeContext);\r\n\r\n    const listOfLanguage = [\r\n        \"Any\",\r\n        \"Hindi\",\r\n        \"English\",\r\n    ];\r\n    const [selectedList, setSelectedList] = useState({\r\n        \"Any\": false,\r\n        \"Hindi\": false,\r\n        \"English\": false,\r\n    });\r\n    const handleSelected = (val, selected) => {\r\n        setSelectedList(prevState => {\r\n            return {\r\n                ...prevState,\r\n                [val]: selected\r\n            };\r\n        });\r\n    };\r\n    const dispatch = useDispatch();\r\n    const handleLangSelect = (e) => {\r\n        e.preventDefault();\r\n        let list = [];\r\n        for (let i in selectedList) {\r\n            if (selectedList[i] === true)\r\n                list.push(i.toLowerCase());\r\n        }\r\n        dispatch(setMusicLang(list));\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={useStyle.component} className=\"dropdown\">\r\n            <div className=\"dropdown-head\">\r\n                <p>Pick the language you want to listen to</p>\r\n            </div>\r\n            <div className={\"lang-list\"}>\r\n                {listOfLanguage.map((item) => {\r\n                    return (\r\n                        <LangList onClick={handleSelected} key={item} item={item}/>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className={\"button-div\"}>\r\n                <Button onClick={handleLangSelect} style={useStyle.button.contained}>\r\n                    Update\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DropDownLanguageList;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAO,8BAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,YAAR,QAA2B,uBAA3B;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;EAAA;;EAE/B,MAAMC,QAAQ,GAAGR,UAAU,CAACI,YAAD,CAA3B;EAEA,MAAMK,cAAc,GAAG,CACnB,KADmB,EAEnB,OAFmB,EAGnB,SAHmB,CAAvB;EAKA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC;IAC7C,OAAO,KADsC;IAE7C,SAAS,KAFoC;IAG7C,WAAW;EAHkC,CAAD,CAAhD;;EAKA,MAAMW,cAAc,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;IACtCH,eAAe,CAACI,SAAS,IAAI;MACzB,OAAO,EACH,GAAGA,SADA;QAEH,CAACF,GAAD,GAAOC;MAFJ,CAAP;IAIH,CALc,CAAf;EAMH,CAPD;;EAQA,MAAME,QAAQ,GAAGX,WAAW,EAA5B;;EACA,MAAMY,gBAAgB,GAAIC,CAAD,IAAO;IAC5BA,CAAC,CAACC,cAAF;IACA,IAAIC,IAAI,GAAG,EAAX;;IACA,KAAK,IAAIC,CAAT,IAAcX,YAAd,EAA4B;MACxB,IAAIA,YAAY,CAACW,CAAD,CAAZ,KAAoB,IAAxB,EACID,IAAI,CAACE,IAAL,CAAUD,CAAC,CAACE,WAAF,EAAV;IACP;;IACDP,QAAQ,CAACV,YAAY,CAACc,IAAD,CAAb,CAAR;EACH,CARD;;EAWA,oBACI;IAAK,KAAK,EAAEZ,QAAQ,CAACgB,SAArB;IAAgC,SAAS,EAAC,UAA1C;IAAA,wBACI;MAAK,SAAS,EAAC,eAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,SAAS,EAAE,WAAhB;MAAA,UACKf,cAAc,CAACgB,GAAf,CAAoBC,IAAD,IAAU;QAC1B,oBACI,QAAC,QAAD;UAAU,OAAO,EAAEd,cAAnB;UAA8C,IAAI,EAAEc;QAApD,GAAwCA,IAAxC;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH,CAJA;IADL;MAAA;MAAA;MAAA;IAAA,QAJJ,eAWI;MAAK,SAAS,EAAE,YAAhB;MAAA,uBACI,QAAC,MAAD;QAAQ,OAAO,EAAET,gBAAjB;QAAmC,KAAK,EAAET,QAAQ,CAACmB,MAAT,CAAgBC,SAA1D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH,CArDD;;GAAMrB,oB;UAsBeF,W;;;KAtBfE,oB;AAsDN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}